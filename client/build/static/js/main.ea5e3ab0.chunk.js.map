{"version":3,"sources":["components/schemas/schemas.styles.js","components/shared/contexts.js","components/schemas/schemas.jsx","components/property-view/property-view.styles.js","components/dialog-template/dialog-template.styles.js","components/dialog-template/dialog-template.jsx","components/property-fields/property-fields.styles.js","components/shared/config/property.config.js","components/validation-fields/validation-fields.styles.js","components/validation-fields/validation-fields.jsx","components/property-fields/property-fields.jsx","components/property-view/property-view.jsx","components/schema/schema.styles.js","components/clickable-properties-list/clickable-properties-list.styles.js","components/clickable-properties-list/clickable-properties-list.jsx","axiosConf.js","appConf.js","services/SchemaService.js","components/schema/schema.jsx","components/migrations/migrations.styles.js","components/migrations/migrations.jsx","components/settings/settings.styles.js","components/settings/settings.jsx","components/side-bar/side-bar.styles.js","components/side-bar/side-bar.jsx","App.styles.js","components/property-actions/property-actions.styles.js","components/property-input-fields/property-input-fields.styles.js","components/tab-panel/tab-panel.styles.js","components/tab-panel/tab-panel.jsx","components/dynamic-input-fields/dynamic-input-fields.styles.js","components/dynamic-input-fields/dynamic-input-fields.jsx","components/validation-input-fields/validation-input-fields.styles.js","components/validation-input-fields/validation-input-fields.jsx","components/property-input-fields/property-input-fields.jsx","components/property-actions/property-actions.jsx","components/add-property/add-property.styles.js","components/add-property/add-property.jsx","components/add-schema/add-schema.styles.js","components/editable-properties-list/editable-properties-list.styles.js","components/editable-property/editable-property.styles.js","components/editable-property/editable-property.jsx","components/editable-properties-list/editable-properties-list.jsx","components/add-schema/add-schema.jsx","components/edit-schema/edit-schema.styles.js","components/edit-schema/edit-schema.jsx","App.jsx","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","root","width","height","title","color","fontWeight","textAlign","card","border","margin","fontSize","background","schemaList","display","justifyContent","message","schemasListContext","createContext","Schemas","history","useHistory","classes","schemasList","useContext","className","List","length","map","schema","ListItem","button","key","schemaName","onClick","push","handleChooseSchema","Fab","aria-label","href","theme","dialogTitle","marginRight","spacing","closeButton","position","right","top","palette","grey","dialogContent","padding","alignItems","dialogActions","DialogTemplate","content","actions","open","onClose","Dialog","DialogTitle","disableTypography","Typography","variant","IconButton","DialogContent","dividers","DialogActions","fontFamily","date","field","fieldTitle","fieldValue","propertyConfig","propertyFields","name","displayName","type","required","options","validationSchemas","Number","items","String","Date","format","flexDirection","ValidationFields","property","Object","keys","validation","propertyType","validationField","undefined","JSON","stringify","PropertyFields","createdAt","toLocaleString","updatedAt","PropertyView","propertyName","buttons","listItem","marginBottom","ClickablePropertiesList","propertiesList","server","host","port","instance","axios","create","baseURL","headers","SchemaService","axiosInstance","get","data","schemaId","post","updatedSchema","put","delete","propertyId","Schema","useParams","setSchemasList","find","useState","selectedProperty","setSelectedProperty","handleDeleteSchema","a","deleteSchemaById","_id","getSchemasList","schemaProperties","handleOpenViewPropertyDialog","Migrations","Settings","drawer","link","textDecoration","AppBar","Drawer","text","to","toLowerCase","page","minWidth","flexGrow","tabs","boxShadow","tab","selectedTab","backgroundColor","TabPanel","children","value","index","role","hidden","id","aria-labelledby","Box","component","label","DynamicInputFields","fieldName","object","setObject","FormControl","FormLabel","Button","values","handleAddFields","TextField","onChange","event","target","handleFieldChange","splice","handleRemoveFields","ValidationInputFields","setProperty","setPropertyValidation","newPropertyValidation","prevValue","handleChange","checked","useEffect","forEach","FormControlLabel","control","Checkbox","PropertyInputFields","newProperty","setNewProperty","pageValue","setPageValue","getTabProps","propertyRef","Tabs","newValue","Tab","disabled","InputLabel","Select","option","MenuItem","PropertyActions","initialValue","isPropertyValidated","isValid","propertyField","isAllRequiredFieldsFilled","alert","actionName","toUpperCase","action","actionFunction","AddProperty","setSchemaProperties","save","handlePropertyCreation","EditableProperty","openUpdatePropertyDialog","setOpenUpdatePropertyDialog","handleCloseUpdatePropertyDialog","propertyIndex","indexOf","handlePropertyUpdate","propertyToDelete","handleDeleteProperty","EditablePropertiesList","setPropertiesList","AddSchema","setSchemaName","openCreatePropertyDialog","setOpenCreatePropertyDialog","handleSchemaCreation","createSchema","EditSchema","prevSchema","newSchema","setNewSchema","handleSchemaUpdate","updateSchema","prevNewSchema","defaultValue","handleChangeName","newSchemaProperties","App","getSchemaList","path","Provider","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"yTA+BeA,EA7BGC,aAAW,iBAAO,CAClCC,KAAM,CACJC,MAAO,MACPC,OAAQ,QAEVC,MAAO,CACLC,MAAO,UACPC,WAAY,MACZC,UAAW,UAEbC,KAAM,CACJN,MAAO,QACPC,OAAQ,QACRM,OAAQ,oBACRC,OAAQ,OACRL,MAAO,UACPC,WAAY,MACZK,SAAU,QACVC,WAAY,WAEdC,WAAY,CACVC,QAAS,OACTC,eAAgB,UAElBC,QAAS,CACPX,MAAO,eCzBEY,EAAqBC,0BCuCnBC,EAjCC,WACd,IAAIC,EAAUC,cACRC,EAAUvB,IACRwB,EAAgBC,qBAAWP,GAA3BM,YAMR,OACE,yBAAKE,UAAWH,EAAQrB,MACtB,wBAAIwB,UAAWH,EAAQlB,OAAvB,WACA,kBAACsB,EAAA,EAAD,CAAMD,UAAWH,EAAQT,YACtBU,GAAeA,EAAYI,OAAS,EAAIJ,EAAYK,KAAI,SAACC,GAAD,OACvD,kBAACC,EAAA,EAAD,CACEL,UAAWH,EAAQd,KACnBuB,QAAM,EACNC,IAAKH,EAAOI,WACZC,QAAS,YAbQ,SAACL,GAC1BT,EAAQe,KAAR,WAAiBN,EAAOI,aAadG,CAAmBP,KAGpBA,EAAOI,eAER,wBAAIR,UAAWH,EAAQN,SAAvB,yBAEN,kBAACqB,EAAA,EAAD,CAAKhC,MAAM,UAAUiC,aAAW,MAAMC,KAAK,cACzC,kBAAC,IAAD,SC9BOxC,EAHGC,aAAW,iBAAO,CAClCC,KAAM,OCyBOF,EA1BGC,aAAW,SAACwC,GAAD,MAAY,CACvCvC,KAAM,GACNwC,YAAa,CACXC,YAAaF,EAAMG,QAAQ,IAC3BtC,MAAO,WAETuC,YAAa,CACXC,SAAU,WACVC,MAAON,EAAMG,QAAQ,GACrBI,IAAKP,EAAMG,QAAQ,GACnBtC,MAAOmC,EAAMQ,QAAQC,KAAK,MAE5BC,cAAe,CACbC,QAASX,EAAMG,QAAQ,GACvB7B,QAAS,OACTC,eAAgB,SAChBqC,WAAY,WAEdC,cAAe,CACb3C,OAAQ,EACRyC,QAASX,EAAMG,QAAQ,GACvB7B,QAAS,OACTC,eAAgB,c,uECWLuC,EAvBQ,SAAC,GAAgD,IAA9ClD,EAA6C,EAA7CA,MAAOmD,EAAsC,EAAtCA,QAASC,EAA6B,EAA7BA,QAASC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QACjDpC,EAAUvB,IAEhB,OACE,kBAAC4D,EAAA,EAAD,CAAQF,KAAMA,EAAMC,QAASA,GAC3B,kBAACE,EAAA,EAAD,CAAaxD,MAAOA,EAAOsD,QAASA,EAASG,mBAAiB,GAC5D,kBAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKtC,UAAWH,EAAQmB,aACzCrC,GAEFsD,EACC,kBAACM,EAAA,EAAD,CAAY9B,QAASwB,EAASjC,UAAWH,EAAQsB,aAC/C,kBAAC,IAAD,OAEA,MAEN,kBAACqB,EAAA,EAAD,CAAexC,UAAWH,EAAQ4B,cAAegB,UAAQ,GACtDX,GAEH,kBAACY,EAAA,EAAD,CAAe1C,UAAWH,EAAQ+B,eAAgBG,KCHzCzD,EAzBGC,aAAW,SAACwC,GAAD,MAAY,CACvCvC,KAAM,CACJmE,WAAW,sBAEbC,KAAM,CACJ/D,WAAY,MACZD,MAAO,OACPE,UAAW,SACXI,SAAS,SAEX2D,MAAO,CACLxD,QAAS,OACTC,eAAgB,gBAElBwD,WAAY,CACVjE,WAAY,MACZD,MAAO,OACP+D,WAAW,qBACX7D,UAAU,QAEZiE,WAAY,CACVJ,WAAW,qBACX7D,UAAU,YCqKCkE,EA7LQ,CACrBC,eAAgB,CACd,CACEC,KAAM,eACNC,YAAa,OACbC,KAAM,SACNC,UAAU,GAEZ,CACEH,KAAM,eACNC,YAAa,OACbC,KAAM,QACNE,QAAS,CAAC,SAAU,SAAU,UAAW,OAAQ,YACjDD,UAAU,GAEZ,CACEH,KAAM,eACNC,YAAa,gBACbC,KAAM,SACNC,UAAU,GAEZ,CAAEH,KAAM,OAAQC,YAAa,OAAQC,KAAM,OAAQC,UAAU,GAC7D,CACEH,KAAM,WACNC,YAAa,SACbC,KAAM,UACNC,UAAU,GAEZ,CACEH,KAAM,QACNC,YAAa,QACbC,KAAM,UACNC,UAAU,GAEZ,CACEH,KAAM,WACNC,YAAa,WACbC,KAAM,UACNC,UAAU,IAGdE,kBAAmB,CACjBC,OAAQ,CACN,CACEN,KAAM,aACNC,YAAa,cACbC,KAAM,UAER,CACEF,KAAM,cACNC,YAAa,eACbC,KAAM,UAER,CACEF,KAAM,WACNC,YAAa,YACbC,KAAM,UAER,CACEF,KAAM,kBACNC,YAAa,oBACbC,KAAM,UAER,CACEF,KAAM,kBACNC,YAAa,oBACbC,KAAM,UAER,CACEF,KAAM,eACNC,YAAa,gBACbC,KAAM,UAER,CACEF,KAAM,aACNC,YAAa,cACbC,KAAM,QACNK,MAAO,CAAEL,KAAM,WAEjB,CACEF,KAAM,SACNC,YAAa,OACbC,KAAM,WAER,CACEF,KAAM,aACNC,YAAa,WACbC,KAAM,WAER,CACEF,KAAM,UACNC,YAAa,QACbC,KAAM,WAER,CACEF,KAAM,YACNC,YAAa,UACbC,KAAM,YAGVM,OAAQ,CACN,CACER,KAAM,aACNC,YAAa,cACbC,KAAM,UAER,CACEF,KAAM,cACNC,YAAa,eACbC,KAAM,UAER,CACEF,KAAM,SACNC,YAAa,SACbC,KAAM,UAER,CACEF,KAAM,WACNC,YAAa,YACbC,KAAM,UAER,CACEF,KAAM,aACNC,YAAa,cACbC,KAAM,UAER,CACEF,KAAM,WACNC,YAAa,YACbC,KAAM,UAER,CACEF,KAAM,aACNC,YAAa,cACbC,KAAM,QACNK,MAAO,CAAEL,KAAM,WAEjB,CACEF,KAAM,WACNC,YAAa,WACbC,KAAM,QACNK,MAAO,CAAEL,KAAM,WAEjB,CACEF,KAAM,iBACNC,YAAa,mBACbC,KAAM,QACNK,MAAO,CAAEL,KAAM,WAEjB,CACEF,KAAM,gBACNC,YAAa,eACbC,KAAM,WAER,CACEF,KAAM,UACNC,YAAa,QACbC,KAAM,YAGVO,KAAM,CACJ,CACET,KAAM,SACNC,YAAa,SACbC,KAAM,SACNQ,OAAQ,QAEV,CACEV,KAAM,QACNC,YAAa,QACbC,KAAM,SACNQ,OAAQ,QAEV,CACEV,KAAM,WACNC,YAAa,YACbC,KAAM,SACNQ,OAAQ,QAEV,CACEV,KAAM,aACNC,YAAa,cACbC,KAAM,QACNK,MAAO,CAAEL,KAAM,SAAUQ,OAAQ,YC/K1BtF,EANGC,aAAW,iBAAO,CAClCC,KAAM,CACJa,QAAS,OACTwE,cAAe,cC2BJC,EA5BU,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACpBlE,EAAUvB,IAEhB,OACE,yBAAK0B,UAAWH,EAAQrB,MACuB,IAA5CwF,OAAOC,KAAKF,EAASG,YAAYhE,OAChC,qCAEA8C,EAAeO,kBAAkBQ,EAASI,eAC1CnB,EAAeO,kBAAkBQ,EAASI,cAAchE,KACtD,SAACiE,GAAD,YACgDC,IAA9CN,EAASG,WAAWE,EAAgBlB,OAClC,yBAAK3C,IAAK6D,EAAgBlB,MACxB,6BACGkB,EAAgBjB,YADnB,IACiC,IACL,UAAzBiB,EAAgBhB,MACQ,YAAzBgB,EAAgBhB,KACZkB,KAAKC,UAAUR,EAASG,WAAWE,EAAgBlB,OACnDa,EAASG,WAAWE,EAAgBlB,aCc3CsB,EA/BQ,SAAC,GAAkB,IAAhBT,EAAe,EAAfA,SAClBlE,EAAUvB,IAEhB,OACE,yBAAK0B,UAAWH,EAAQrB,MACtB,yBAAKwB,UAAWH,EAAQ+C,MAAxB,cACc,IAAIe,KAAKI,EAASU,WAAWC,iBAD3C,gBAC0E,IACvE,IAAIf,KAAKI,EAASY,WAAWD,kBAE/B1B,EAAeC,eAAe9C,KAAI,SAAC0C,GAClC,YAAgCwB,IAAzBN,EAASlB,EAAMK,MACpB,yBAAK3C,IAAKsC,EAAMK,KAAMlD,UAAWH,EAAQgD,OACvC,wBAAI7C,UAAWH,EAAQiD,YAAaD,EAAMM,aAC1C,yBAAKnD,UAAWH,EAAQkD,YACN,SAAfF,EAAMO,MAAkC,YAAfP,EAAMO,KAC5BkB,KAAKC,UAAUR,EAASlB,EAAMK,OAC9Ba,EAASlB,EAAMK,QAGrB,aAEmBmB,IAAxBN,EAASG,YACR,yBAAK3D,IAAI,aAAaP,UAAWH,EAAQgD,OACvC,wBAAI7C,UAAWH,EAAQiD,YAAvB,cACA,kBAAC,EAAD,CAAkBiB,SAAUA,OCPvBa,EAjBM,SAAC,GAAyC,IAAvC5C,EAAsC,EAAtCA,KAAMC,EAAgC,EAAhCA,QAAS8B,EAAuB,EAAvBA,SAC/BlE,GADsD,EAAbO,OAC/B9B,KAEhB,OACE,yBAAK0B,UAAWH,EAAQrB,MACrBuF,GACC,kBAAC,EAAD,CACEpF,MAAOoF,EAASc,aAChB/C,QAAS,kBAAC,EAAD,CAAgBiC,SAAUA,IACnC/B,KAAMA,EACNC,QAASA,M,oCCWJ3D,EAxBGC,aAAW,SAACwC,GAAD,MAAY,CACvCvC,KAAM,CACJE,OAAQ,QAEVC,MAAO,CACLC,MAAO,UACPC,WAAY,MACZC,UAAW,UAEb8D,KAAM,CACJ/D,WAAY,MACZD,MAAO,UACPE,UAAW,SACXI,SAAU,UAEZ4F,QAAS,CACPzF,QAAS,OACTC,eAAgB,UAElBgB,OAAQ,CACNrB,OAAQ,WCNGX,EAdGC,aAAW,SAACwC,GAAD,MAAY,CACvCvC,KAAM,CACJC,MAAO,MACPU,WAAY,QACZH,OAAQ,qBAEV+F,SAAU,CACRnG,MAAO,UACPC,WAAY,MACZM,WAAY,UACZ6F,aAAc,W,QCsBHC,EA7BiB,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,eAAgBzE,EAAc,EAAdA,QAC3CZ,EAAUvB,IAEhB,OACE,oCACE,kBAAC,IAAD,CAAW0B,UAAWH,EAAQrB,MAC5B,kBAACyB,EAAA,EAAD,KACGiF,EAAehF,OAAS,EACvBgF,EAAe/E,KAAI,SAAC4D,GAAD,OACjB,kBAAC1D,EAAA,EAAD,CACEC,QAAM,EACNC,IAAKwD,EAASc,aACdpE,QAAS,kBAAMA,EAAQsD,IACvB/D,UAAWH,EAAQkF,UAElBhB,EAASc,iBAId,kBAACxE,EAAA,EAAD,CAAUL,UAAWH,EAAQkF,UAA7B,+B,kCCrBJI,ECHG,CAETA,OAAQ,CACNC,KAAM,YACNC,KAAM,MDDFF,OASOG,E,OAPEC,EAAMC,OAAO,CAC5BC,QAAQ,UAAD,OAAYN,EAAOC,KAAnB,YAA2BD,EAAOE,KAAlC,eACPK,QAAS,CACP,eAAgB,sBE4BLC,E,gPAhCYC,EAAcC,IAAI,K,uBAAjCC,E,EAAAA,K,kBACDA,G,8KAIkBC,G,yFACFH,EAAcC,IAAd,WAAsBE,I,uBAArCD,E,EAAAA,K,kBACDA,G,8KAGiB1F,G,iFACXwF,EAAcI,KAAK,IAAnB,eACR5F,I,sNAImB2F,EAAUE,G,iFACrBL,EAAcM,IAAd,WAAsBH,GAAtB,eACRE,I,4NAIuBF,G,iFACtBH,EAAcO,OAAd,WAAyBJ,I,8LAISA,EAAUK,G,iFAC5CR,EAAcO,OAAd,WAAyBJ,EAAzB,YAAqCK,I,2GCqDhCC,GAzEA,WACb,IAAMxG,EAAUvB,IACZqB,EAAUC,cACNY,EAAe8F,cAAf9F,WAHW,EAIqBT,qBAAWP,GAA3CM,EAJW,EAIXA,YAAayG,EAJF,EAIEA,eACfnG,EAASN,EAAY0G,MACzB,SAACpG,GAAD,OAAYA,EAAOI,aAAP,UAAyBA,MANpB,EAQ6BiG,wBAASpC,GARtC,mBAQZqC,EARY,KAQMC,EARN,KAkBbC,EAAkB,uCAAG,sBAAAC,EAAA,sEACnBlB,EAAcmB,iBAAiB1G,EAAO2G,KADnB,mBAEnBR,EAFmB,SAEEZ,EAAcqB,iBAFhB,yDAGzBrH,EAAQe,KAAK,KAHY,2CAAH,qDAMxB,OACE,yBAAKV,UAAWH,EAAQrB,MACrB4B,GACC,oCACE,wBAAIJ,UAAWH,EAAQlB,OACpByB,EAASA,EAAOI,WAAa,oBAEhC,yBAAKR,UAAWH,EAAQ+C,MAAxB,cACc,IAAIe,KAAKvD,EAAOqE,WAAWC,iBADzC,iBAEM,IAAIf,KAAKvD,EAAOuE,WAAWD,kBAEjC,6BACCtE,EAAO6G,kBACN,oCACE,kBAAC,EAAD,CACE/B,eAAgB9E,EAAO6G,iBACvBxG,QAAS,SAACsD,GAAD,OA9Bc,SAACA,GACpC4C,EAAoB5C,GA6BemD,CAA6BnD,MAEtD,kBAAC,EAAD,CACE/B,UAA2BqC,IAArBqC,EACNzE,QA9BwB,WACpC0E,OAAoBtC,IA8BRjE,OAAQA,EACR2D,SAAU2C,KAIhB,6BACA,yBAAK1G,UAAWH,EAAQiF,SACtB,kBAAClE,EAAA,EAAD,CACEhC,MAAM,UACNkC,KAAI,gBAAWV,EAAOI,YACtBR,UAAWH,EAAQS,QAEnB,kBAAC,IAAD,OAEF,kBAACM,EAAA,EAAD,CACEhC,MAAM,UACN6B,QAAS,kBAAMmG,KACf5G,UAAWH,EAAQS,QAEnB,kBAAC,IAAD,WCjEChC,GATGC,aAAW,SAACwC,GAAD,MAAY,CACvCvC,KAAM,GACNG,MAAM,CACJC,MAAO,UACPC,WAAY,MACZC,UAAW,cCEAqI,GANI,WACjB,IAAMtH,EAAUvB,KAEhB,OAAO,wBAAI0B,UAAWH,EAAQlB,OAAvB,eCKML,GATGC,aAAW,SAACwC,GAAD,MAAY,CACvCvC,KAAM,GACNG,MAAM,CACJC,MAAO,UACPC,WAAY,MACZC,UAAW,cCEAsI,GANE,WACf,IAAMvH,EAAUvB,KAEhB,OAAO,wBAAI0B,UAAWH,EAAQlB,OAAvB,a,UCUML,GAdGC,aAAW,iBAAO,CAClCC,KAAM,GACN6I,OAAQ,CACN5I,MAAO,SAET6I,KAAM,CACJ5F,QAAS,OACT9C,MAAO,UACPC,WAAY,MACZK,SAAU,QACVqI,eAAgB,YCeLC,GAtBA,WACb,IAAM3H,EAAUvB,KAGhB,OACE,kBAACmJ,GAAA,EAAD,CAAQnF,QAAQ,YAAYtC,UAAWH,EAAQwH,QAC7C,kBAACpH,EAAA,EAAD,KAJc,CAAC,WAAY,UAAW,cAKzBE,KAAI,SAACuH,GAAD,OACb,kBAACrH,EAAA,EAAD,CAAUC,QAAM,EAACC,IAAKmH,GACpB,kBAAC,IAAD,CACEC,GAAa,YAATD,EAAqB,IAArB,WAA+BA,EAAKE,eACxC5H,UAAWH,EAAQyH,MAElBI,UCLApJ,GAXGC,aAAW,SAACwC,GAAD,MAAY,CACvCvC,KAAM,CACJa,QAAS,OACTC,eAAgB,UAElBuI,KAAM,CACJC,SAAU,MACVhJ,UAAW,c,6BCGAR,GAVGC,aAAW,SAACwC,GAAD,MAAY,CACvCvC,KAAM,GACNsD,QAAS,CACPzC,QAAS,OACTwE,cAAe,SACflC,WAAY,UACZrC,eAAgB,SAChBb,MAAO,S,SCeIH,GArBGC,aAAW,SAACwC,GAAD,MAAY,CACvCvC,KAAM,CACJuJ,SAAU,GAEZC,KAAM,CACJC,UAAW,QAEbC,IAAK,CACHrJ,WAAY,MACZM,WAAY,WAEdgJ,YAAa,CACXC,gBAAiB,UACjBxJ,MAAO,YAETiJ,KAAM,CACJxI,QAAS,OACTwE,cAAe,c,oGCdFvF,GAJEC,aAAW,iBAAO,CACjCC,KAAM,OC4BK6J,GAzBE,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,SAAUC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,MACnBlK,KAEhB,OACE,yBACEmK,KAAK,WACLC,OAAQH,IAAUC,EAClBG,GAAE,0BAAqBH,GACvBI,kBAAA,qBAA+BJ,IAE9BD,IAAUC,GACT,kBAACK,GAAA,EAAD,KACE,kBAACxG,EAAA,EAAD,CAAYyG,UAAW,QAASR,MCA3BhK,GAhBGC,aAAW,SAACwC,GAAD,MAAY,CACvCvC,KAAM,GACNuK,MAAO,CACL1J,QAAS,OACTC,eAAgB,gBAChBT,WAAW,OAEbgE,MAAO,CACLxD,QAAS,QAEXiB,OAAQ,CACN1B,MAAO,OACPC,WAAY,W,mBC4CDmK,GApDY,SAAC,GAAmD,IAAjDC,EAAgD,EAAhDA,UAAW9F,EAAqC,EAArCA,YAAa+F,EAAwB,EAAxBA,OAAQC,EAAgB,EAAhBA,UACtDtJ,EAAUvB,KAuBhB,OACE,kBAAC8K,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAWrJ,UAAWH,EAAQkJ,OAC3B5F,EACD,kBAACmG,GAAA,EAAD,CAAQtJ,UAAWH,EAAQS,OAAQG,QAAS,kBAhB1B,WACtB,IAAM8I,EAASL,EAAOD,GAAP,aAAwBC,EAAOD,IAAc,GAC5DM,EAAO7I,UAAK2D,GACZ8E,EAAU,2BAAKD,GAAN,mBAAeD,EAAYM,KAakBC,KAChD,kBAAC,KAAD,QAGHN,EAAOD,IACNC,EAAOD,GAAW9I,KAAI,SAACoI,EAAOC,GAAR,OACpB,yBAAKjI,IAAG,UAAKgI,EAAL,YAAcC,GAASxI,UAAWH,EAAQgD,OAChD,kBAAC4G,GAAA,EAAD,CACEC,SAAU,SAACC,GAAD,OAjCI,SAACA,EAAOnB,GAChC,IAAMoB,EAASD,EAAMC,OACf1G,EAAO0G,EAAO1G,KACdqF,EAAyB,KAAjBqB,EAAOrB,WAAelE,EAAYuF,EAAOrB,MACjDgB,EAAM,aAAOL,EAAOhG,IAC1BqG,EAAOf,GAASD,EAChBY,EAAU,2BAAKD,GAAN,mBAAehG,EAAOqG,KA2BAM,CAAkBF,EAAOnB,IAC9CD,MAAOA,EACPrF,KAAM+F,IAER,kBAACK,GAAA,EAAD,CACEtJ,UAAWH,EAAQS,OACnBG,QAAS,SAACkJ,GAAD,OAxBM,SAACnB,GAC1B,IAAMe,EAAM,aAAOL,EAAOD,IAC1BM,EAAOO,OAAOtB,EAAO,GACrBW,EAAU,2BAAKD,GAAN,mBAAeD,EAAYM,KAqBNQ,CAAmBvB,KAEvC,kBAAC,KAAD,aCzCClK,GAPGC,aAAW,iBAAO,CAClCC,KAAM,CACJa,QAAS,OACTwE,cAAe,cCiHJmG,GAhHe,SAAC,GAA+B,IAA7BjG,EAA4B,EAA5BA,SAAUkG,EAAkB,EAAlBA,YACnCpK,EAAUvB,KAEV4L,EAAwB,SAACC,GAC7BF,GAAY,SAACG,GACX,OAAO,2BACFA,GADL,IAEElG,WAAYiG,QAKZE,EAAe,SAACV,GACpB,IAEIpB,EAFEqB,EAASD,EAAMC,OACf1G,EAAO0G,EAAO1G,KAGlBqF,EADkB,aAAhBqB,EAAOxG,KACDwG,EAAOU,QACW,KAAjBV,EAAOrB,WACRlE,EAEAuF,EAAOrB,MAEjB0B,GAAY,SAACG,GACX,OAAO,2BACFA,GADL,IAEElG,WAAW,2BAAMH,EAASG,YAAhB,mBAA6BhB,EAAOqF,UAwBpD,OAnBAgC,qBAAU,WACJvH,EAAeO,kBAAkBQ,EAASI,eAC5CnB,EAAeO,kBAAkBQ,EAASI,cAAcqG,SACtD,SAAC3H,GACoB,YAAfA,EAAMO,MACR6G,GAAY,SAACG,GACX,OAAO,2BACFA,GADL,IAEElG,WAAW,2BACNkG,EAAUlG,YADL,mBAEPrB,EAAMK,MAAO,cAO3B,CAAC+G,EAAalG,EAASI,eAGxB,yBAAKnE,UAAWH,EAAQrB,MACrBwE,EAAeO,kBAAkBQ,EAASI,eACzCnB,EAAeO,kBAAkBQ,EAASI,cAAchE,KACtD,SAACiE,GACC,OAAQA,EAAgBhB,MACtB,IAAK,SACL,IAAK,SACL,IAAK,OACH,OACE,kBAACqG,GAAA,EAAD,CACElJ,IAAK6D,EAAgBlB,KACrBA,KAAMkB,EAAgBlB,KACtB6F,MAAO3E,EAAgBjB,YACvBoF,MACExE,EAASG,iBACqCG,IAA9CN,EAASG,WAAWE,EAAgBlB,MAChCa,EAASG,WAAWE,EAAgBlB,MACpC,GAENwG,SAAUW,IAGhB,IAAK,UACH,OACE,kBAACI,GAAA,EAAD,CACElK,IAAK6D,EAAgBlB,KACrBwH,QACE,kBAACC,GAAA,EAAD,CACEL,WACEvG,EAASG,aACTH,EAASG,WAAWE,EAAgBlB,OAItCwG,SAAUW,EACVnH,KAAMkB,EAAgBlB,KACtBtE,MAAM,YAGVmK,MAAO3E,EAAgBjB,cAG7B,IAAK,QACH,OACE,kBAAC,GAAD,CACE5C,IAAK6D,EAAgBlB,KACrB+F,UAAW7E,EAAgBlB,KAC3BC,YAAaiB,EAAgBjB,YAC7B+F,OAAQnF,EAASG,WACjBiF,UAAWe,IAGjB,QACE,OAAO,WC8FRU,GAxLa,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,YAAaC,EAAqB,EAArBA,eACpCjL,EAAUvB,KACRwB,EAAgBC,qBAAWP,GAA3BM,YAFuD,EAG7B2G,mBAAS,GAHoB,mBAGxDsE,EAHwD,KAG7CC,EAH6C,KASzDX,EAAe,SAACV,GACpB,IAEIpB,EAFEqB,EAASD,EAAMC,OACf1G,EAAO0G,EAAO1G,KAGlBqF,EADkB,aAAhBqB,EAAOxG,KACDwG,EAAOU,QACW,KAAjBV,EAAOrB,WACRlE,EAEAuF,EAAOrB,MAEjBuC,GAAe,SAACV,GAAD,YACJ,iBAATlH,EAAA,2BACSkH,GADT,wBACqBlH,EAAOqF,GAD5B,4BAC+C,IAD/C,+BAES6B,GAFT,mBAEqBlH,EAAOqF,QAyG1B0C,EAAc,SAACzC,GACnB,MAAO,CACLG,GAAG,cAAD,OAAgBH,GAClB,gBAAgB,mBAAhB,OAAoCA,KAgBxC,OAZA+B,qBAAU,WAfRvH,EAAeC,eAAeuH,SAAQ,SAAC3H,GAClB,YAAfA,EAAMO,MAAuByH,EAAYhI,EAAMK,OACjD4H,GAAe,SAACV,GACd,OAAO,2BAAKA,GAAZ,mBAAwBvH,EAAMK,MAAO,YAc1C,IAEHqH,qBAAU,WACyB,aAA7BM,EAAY1G,cACd2G,GAAe,SAACV,GACd,OAAO,2BAAKA,GAAZ,IAAuBc,iBAAa7G,SAGvC,CAACyG,EAAgBD,EAAY1G,eAG9B,yBAAKnE,UAAWH,EAAQrB,MACtB,kBAAC,KAAD,CAAQ4C,SAAS,UACf,kBAAC+J,GAAA,EAAD,CAAM7I,QAAQ,YAAYiG,MAAOwC,EAAWrB,SAjJzB,SAACC,EAAOyB,GAC/BJ,EAAaI,IAgJ+DpL,UAAWH,EAAQmI,MACzF,kBAACqD,GAAA,EAAD,eACErL,UAAS,UAAmB,IAAd+K,EAAkBlL,EAAQsI,YAAc,GAA7C,YACPtI,EAAQqI,KAEVa,MAAM,cACFkC,EAAY,KAEjBjI,EAAeO,kBAAkBsH,EAAY1G,cAC5C,kBAACkH,GAAA,EAAD,eACErL,UAAS,UAAmB,IAAd+K,EAAkBlL,EAAQsI,YAAc,GAA7C,YACPtI,EAAQqI,KAEVa,MAAM,cACFkC,EAAY,KAGlB,kBAACI,GAAA,EAAD,eAAKtC,MAAM,IAAOkC,EAAY,GAA9B,CAAkCK,UAAQ,OAIhD,kBAAC,GAAD,CAAU/C,MAAOwC,EAAWvC,MAAO,GACjC,yBAAKxI,UAAWH,EAAQgI,MA/I1B,oCACG7E,EAAeC,eAAe9C,KAAI,SAAC0C,GAClC,OAAQA,EAAMO,MACZ,IAAK,SACH,OACE,kBAACqG,GAAA,EAAD,CACElJ,IAAKsC,EAAMK,KACXA,KAAML,EAAMK,KACZ6F,MAAOlG,EAAMM,YACboF,WAC8BlE,IAA5BwG,EAAYhI,EAAMK,MACd2H,EAAYhI,EAAMK,MAClB,GAENwG,SAAUW,EACVhH,SAAUR,EAAMQ,WAGtB,IAAK,QACH,OACE,kBAAC+F,GAAA,EAAD,CAAa/F,SAAUR,EAAMQ,SAAU9C,IAAKsC,EAAMK,MAChD,kBAACqI,GAAA,EAAD,KAAa1I,EAAMM,aACnB,kBAACqI,GAAA,EAAD,CACEtI,KAAML,EAAMK,KACZqF,MACEsC,EAAYhI,EAAMK,MAAQ2H,EAAYhI,EAAMK,MAAQ,GAEtDwG,SAAUW,GAETxH,EAAMS,QAAQnD,KAAI,SAACsL,GAClB,OACE,kBAACC,GAAA,EAAD,CAAUnL,IAAKkL,EAAQlD,MAAOkD,GAC3BA,QAOf,IAAK,UACH,OACE,kBAAChB,GAAA,EAAD,CACElK,IAAKsC,EAAMK,KACXwH,QACE,kBAACC,GAAA,EAAD,CACEL,UAASO,EAAYhI,EAAMK,MAC3BwG,SAAUW,EACVnH,KAAML,EAAMK,KACZtE,MAAM,YAGVmK,MAAOlG,EAAMM,cAGnB,IAAK,OACH,OACE,kBAAC,GAAD,CACE5C,IAAKsC,EAAMK,KACX+F,UAAWpG,EAAMK,KACjBC,YAAaN,EAAMM,YACnB+F,OAAQ2B,EACR1B,UAAW2B,IAGjB,QACE,OAAO,SAGiB,aAA7BD,EAAY1G,cACX,kBAACiF,GAAA,EAAD,CAAa/F,UAAQ,GACnB,kBAACkI,GAAA,EAAD,qBACA,kBAACC,GAAA,EAAD,CACEtI,KAAK,cACLqF,MAAOsC,EAAYK,YAAcL,EAAYK,YAAc,GAC3DxB,SAAUW,GAETvK,EAAYK,KAAI,SAACC,GAChB,OACE,kBAACsL,GAAA,EAAD,CAAUnL,IAAKH,EAAOI,WAAY+H,MAAOnI,EAAOI,YAC7CJ,EAAOI,oBAkEtB,kBAAC,GAAD,CAAU+H,MAAOwC,EAAWvC,MAAO,GACjC,kBAAC,GAAD,CACEzE,SAAU8G,EACVZ,YAAaa,OCjHRa,GA7ES,SAAC,GAA8C,IAA5C3J,EAA2C,EAA3CA,KAAMC,EAAqC,EAArCA,QAASF,EAA4B,EAA5BA,QAAS6J,EAAmB,EAAnBA,aAC3C/L,EAAUvB,KADoD,EAE9BmI,mBAAS,IAFqB,mBAE7DoE,EAF6D,KAEhDC,EAFgD,KAwB9De,EAAsB,WAE1B,IAAIC,GAAU,EAKd,OA3BgC,WAChC,IAAIA,GAAU,EAgBd,OAfA9I,EAAeC,eAAeuH,SAAQ,SAACuB,IAEnCA,EAAc1I,eACuBgB,IAApCwG,EAAYkB,EAAc7I,OACW,KAApC2H,EAAYkB,EAAc7I,QAE5B4I,GAAU,MAIiB,aAA7BjB,EAAY1G,mBACgBE,IAA5BwG,EAAYK,cAEZY,GAAU,GAELA,EAMFE,KACHF,GAAU,EACVG,MAAM,oCAEDH,GAST,OANAvB,qBAAU,WACJqB,GACFd,EAAec,KAEhB,CAACA,IAGF,kBAAC,EAAD,CACEjN,MAAK,UAAKoD,EAAQ,GAAGmK,WAAWC,cAA3B,aACLrK,QACE,yBAAK9B,UAAWH,EAAQiC,SAEpB,kBAAC,GAAD,CACE+I,YAAaA,EACbC,eAAgBA,KAKxB/I,QACEA,GACAA,EAAQ5B,KAAI,SAACiM,GAAD,OACV,kBAAC9C,GAAA,EAAD,CACE/I,IAAK6L,EAAOF,WACZ5J,QAAQ,YACR1D,MAAM,UACN6B,QAAS,WACHoL,MACFO,EAAOC,eAAexB,GACtBC,EAAe,OAIlBsB,EAAOF,WAAWC,kBAIzBnK,KAAMA,EACNC,QAASA,KCzEA3D,GAJGC,aAAW,SAACwC,GAAD,MAAY,CACvCvC,KAAM,OCiCO8N,GAhCK,SAAC,GAKd,IAJLtK,EAII,EAJJA,KACAC,EAGI,EAHJA,QACAgF,EAEI,EAFJA,iBACAsF,EACI,EADJA,oBAEgBjO,KAShB,OACE,kBAAC,GAAD,CACEyD,QAAS,CACP,CACEmK,WAAY,SACZG,eAAgB,SAACxB,IAZM,SAACA,GAE9B,IAAM2B,EAAI,aAAOvF,GACjBuF,EAAK9L,KAAKmK,GACV0B,EAAoBC,GASZC,CAAuB5B,GACvB5I,OAIND,KAAMA,EACNC,QAASA,KClBA3D,GAXGC,aAAW,SAACwC,GAAD,MAAY,CACvCvC,KAAM,CACJE,OAAQ,QAEVC,MAAO,CACLC,MAAO,UACPC,WAAY,MACZC,UAAW,cCOAR,GAdGC,aAAW,SAACwC,GAAD,MAAY,CACvCvC,KAAM,CACJC,MAAO,MACPU,WAAY,QACZH,OAAQ,qBAEV+F,SAAU,CACRnG,MAAO,UACPC,WAAY,MACZM,WAAY,UACZ6F,aAAc,WCNH1G,GAJGC,aAAW,SAACwC,GAAD,MAAY,CACvCvC,KAAM,OCwEOkO,GAtEU,SAAC,GAInB,IAHL3I,EAGI,EAHJA,SACAkD,EAEI,EAFJA,iBACAsF,EACI,EADJA,oBACI,GACYjO,KACgDmI,oBAC9D,IAHE,mBAEGkG,EAFH,KAE6BC,EAF7B,KAUEC,EAAkC,WACtCD,GAA4B,IAqB9B,OACE,oCACE,kBAACvM,EAAA,EAAD,CACEC,QAAM,EACNG,QA9BiC,WACrCmM,GAA4B,IA8BxBrM,IAAKwD,EAASc,cAEbd,EAASc,cAEZ,kBAAC,GAAD,CACE9C,QAAS,CACP,CACEmK,WAAY,OACZG,eAAgB,SAACxB,IA/BE,SAACA,GAC5B,IAAM2B,EAAI,aAAOvF,GACX6F,EAAgBN,EACnBrM,KAAI,SAAC0K,GAAD,OAAiBA,EAAY9D,OACjCgG,QAAQlC,EAAY9D,KACvByF,EAAKM,GAAiBjC,EACtB0B,EAAoBC,GA0BVQ,CAAqBnC,GACrBgC,MAGJ,CACEX,WAAY,SACZG,eAAgB,SAACtI,IA7BE,SAACkJ,GAC5B,IAAMT,EAAI,aAAOvF,GACX6F,EAAgBN,EACnBrM,KAAI,SAAC4D,GAAD,OAAcA,EAASgD,OAC3BgG,QAAQE,EAAiBlG,KAC5ByF,EAAK1C,OAAOgD,EAAe,GAC3BP,EAAoBC,GAwBVU,CAAqBnJ,GACrB8I,OAIN7K,KAAM2K,EACN1K,QAAS4K,EACTjB,aAAc7H,MCnCPoJ,GA5BgB,SAAC,GAA2C,IAAzCjI,EAAwC,EAAxCA,eAAgBkI,EAAwB,EAAxBA,kBAC1CvN,EAAUvB,KAEhB,OACE,oCACE,kBAAC,IAAD,CAAW0B,UAAWH,EAAQrB,MAC5B,kBAACyB,EAAA,EAAD,KACGiF,EAAehF,OAAS,EACvBgF,EAAe/E,KAAI,SAAC4D,GAAD,OACjB,yBAAKxD,IAAKwD,EAASc,aAAc7E,UAAWH,EAAQkF,UAClD,kBAAC,GAAD,CACEhB,SAAUA,EACVkD,iBAAkB/B,EAClBqH,oBAAqBa,QAK3B,kBAAC/M,EAAA,EAAD,CAAUL,UAAWH,EAAQkF,UAA7B,+BCwDGsI,GAvEG,WAChB,IAAMxN,EAAUvB,KACZqB,EAAUC,cACN2G,EAAmBxG,qBAAWP,GAA9B+G,eAHc,EAIcE,mBAAS,IAJvB,mBAIfjG,EAJe,KAIH8M,EAJG,OAK0B7G,mBAAS,IALnC,mBAKfQ,EALe,KAKGsF,EALH,OAM0C9F,oBAC9D,GAPoB,mBAMf8G,EANe,KAMWC,EANX,KAUhBC,EAAoB,uCAAG,sBAAA5G,EAAA,sEACrBlB,EAAc+H,aAAa,CAC/BlN,WAAYA,EACZyG,iBAAkBA,IAHO,mBAKrBV,EALqB,SAKAZ,EAAcqB,iBALd,yDAM3BrH,EAAQe,KAAK,KANc,2CAAH,qDAgB1B,OACE,yBAAKV,UAAWH,EAAQrB,MACtB,wBAAIwB,UAAWH,EAAQlB,OAAvB,cACA,kBAAC8K,GAAA,EAAD,CACEd,GAAG,iBACHI,MAAM,cACNR,MAAO/H,EACPkJ,SAAU,SAACC,GACT2D,EAAc3D,EAAMC,OAAOrB,UAG/B,6BACA,6BACA,kBAAC,GAAD,CACErD,eAAgB+B,EAChBmG,kBAAmBb,IAErB,6BACA,kBAACjD,GAAA,EAAD,CACEhH,QAAQ,YACR1D,MAAM,UACN6B,QA5BiC,WACrC+M,GAA4B,KAwB1B,gBAOA,kBAAClE,GAAA,EAAD,CACEhH,QAAQ,YACR1D,MAAM,UACN6B,QAASgN,GAHX,UAOA,kBAACnE,GAAA,EAAD,CAAQhH,QAAQ,YAAY1D,MAAM,UAAUkC,KAAK,KAAjD,UAGA,kBAAC,GAAD,CACEkB,KAAMuL,EACNtL,QAxCkC,WACtCuL,GAA4B,IAwCxBvG,iBAAkBA,EAClBsF,oBAAqBA,MC7DdjO,GAXGC,aAAW,SAACwC,GAAD,MAAY,CACvCvC,KAAM,CACJE,OAAQ,QAEVC,MAAO,CACLC,MAAO,UACPC,WAAY,MACZC,UAAW,cC4FA6O,GA3FI,WACjB,IAAM9N,EAAUvB,KACZqB,EAAUC,cACNY,EAAe8F,cAAf9F,WAHe,EAIiBT,qBAAWP,GAA3CM,EAJe,EAIfA,YAAayG,EAJE,EAIFA,eACfqH,EAAa9N,EAAY0G,MAC7B,SAACpG,GAAD,OAAYA,EAAOI,aAAP,UAAyBA,MANhB,EAQWiG,mBAAS,IARpB,mBAQhBoH,EARgB,KAQLC,EARK,OASyCrH,oBAC9D,GAVqB,mBAShB8G,EATgB,KASUC,EATV,KAwBjBO,EAAkB,uCAAG,sBAAAlH,EAAA,sEACnBlB,EAAcqI,aAAaJ,EAAW7G,IAAK8G,GADxB,mBAEnBtH,EAFmB,SAEEZ,EAAcqB,iBAFhB,yDAGzBrH,EAAQe,KAAK,KAHY,2CAAH,qDAMlB6L,EAAsB,SAACtF,GAC3B6G,GAAa,SAACG,GACZ,OAAO,2BAAKA,GAAZ,IAA2BhH,iBAAkBA,QAQjD,OAJAsD,qBAAU,WACRuD,EAAaF,KACZ,CAACA,IAGF,yBAAK5N,UAAWH,EAAQrB,MACrBqP,GACC,oCACE,wBAAI7N,UAAWH,EAAQlB,OAAvB,eACA,kBAAC8K,GAAA,EAAD,CACEd,GAAG,iBACHI,MAAM,cACNmF,aAAcL,EAAUrN,WACxBkJ,SAAU,SAACC,GAAD,OApCK,SAACA,GACxBmE,EAAa,2BAAKD,GAAN,IAAiBrN,WAAYmJ,EAAMC,OAAOrB,SAmCzB4F,CAAiBxE,MAExC,6BACA,6BACCkE,EAAU5G,kBACT,kBAAC,GAAD,CACE/B,eAAgB2I,EAAU5G,iBAC1BmG,kBAAmB,SAACgB,GAAD,OACjB7B,EAAoB6B,MAI1B,6BACA,kBAAC9E,GAAA,EAAD,CACEhH,QAAQ,YACR1D,MAAM,UACN6B,QAhD6B,WACrC+M,GAA4B,KA4CtB,gBAOA,kBAAClE,GAAA,EAAD,CACEhH,QAAQ,YACR1D,MAAM,UACN6B,QAAS,kBAAMsN,MAHjB,QAOA,kBAACzE,GAAA,EAAD,CAAQhH,QAAQ,YAAY1D,MAAM,UAAUkC,KAAK,KAAjD,UAGA,kBAAC,GAAD,CACEkB,KAAMuL,EACNtL,QA5D8B,WACtCuL,GAA4B,IA4DpBvG,iBAAkB4G,EAAU5G,iBAC5BsF,oBAAqBA,OCrBlB8B,GA3DH,WACV,IAAMxO,EAAUvB,KADA,EAEsBmI,mBAAS,IAF/B,mBAET3G,EAFS,KAEIyG,EAFJ,KAIV+H,EAAa,uCAAG,sBAAAzH,EAAA,kEACpBN,EADoB,SACCZ,EAAcqB,iBADf,6EAAH,qDAQnB,OAJAuD,qBAAU,WACR+D,MACC,IAGD,kBAAC,IAAD,KACE,yBAAKtO,UAAWH,EAAQrB,MACtB,kBAAC,GAAD,MACA,yBAAKwB,UAAWH,EAAQgI,MACtB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO0G,KAAK,eACV,kBAAC,GAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,aACV,kBAAC,GAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,cACV,kBAAC/O,EAAmBgP,SAApB,CACEjG,MAAO,CAAEzI,cAAayG,mBAEtB,kBAAC,GAAD,QAGJ,kBAAC,IAAD,CAAOgI,KAAK,qBACV,kBAAC/O,EAAmBgP,SAApB,CACEjG,MAAO,CAAEzI,cAAayG,mBAEtB,kBAAC,GAAD,QAGJ,kBAAC,IAAD,CAAOgI,KAAK,gBACV,kBAAC/O,EAAmBgP,SAApB,CACEjG,MAAO,CAAEzI,cAAayG,mBAEtB,kBAAC,GAAD,QAGJ,kBAAC,IAAD,CAAOgI,KAAK,KACV,kBAAC/O,EAAmBgP,SAApB,CACEjG,MAAO,CAAEzI,cAAayG,mBAEtB,kBAAC,EAAD,aClDIkI,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,GAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAMlQ,c","file":"static/js/main.ea5e3ab0.chunk.js","sourcesContent":["import { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    width: \"93%\",\n    height: \"100%\",\n  },\n  title: {\n    color: \"#3F51B5\",\n    fontWeight: \"700\",\n    textAlign: \"center\",\n  },\n  card: {\n    width: \"200px\",\n    height: \"100px\",\n    border: \"1px solid #3F51B5\",\n    margin: \"10px\",\n    color: \"#3F51B5\",\n    fontWeight: \"500\",\n    fontSize: \"large\",\n    background: \"#a8b3f5\",\n  },\n  schemaList: {\n    display: \"flex\",\n    justifyContent: \"center\",\n  },\n  message: {\n    color: \"#a8b3f5\",\n  },\n}));\n\nexport default useStyles;\n","import {createContext} from 'react'\n\nexport const schemasListContext = createContext();\n","import React, { useContext, useEffect } from \"react\";\nimport { List, ListItem } from \"@material-ui/core\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Fab from \"@material-ui/core/Fab\";\nimport useStyles from \"./schemas.styles\";\nimport { schemasListContext } from \"../shared/contexts\";\nimport { useHistory } from \"react-router\";\n\nconst Schemas = () => {\n  let history = useHistory();\n  const classes = useStyles();\n  const { schemasList } = useContext(schemasListContext);\n\n  const handleChooseSchema = (schema) => {\n    history.push(`/${schema.schemaName}`);\n  };\n\n  return (\n    <div className={classes.root}>\n      <h1 className={classes.title}>SCHEMAS</h1>\n      <List className={classes.schemaList}>\n        {schemasList && schemasList.length > 0 ? schemasList.map((schema) => (\n          <ListItem\n            className={classes.card}\n            button\n            key={schema.schemaName}\n            onClick={() => {\n              handleChooseSchema(schema);\n            }}\n          >\n            {schema.schemaName}\n          </ListItem>\n        )): <h3 className={classes.message}>There are no schemas</h3>}\n      </List>  \n      <Fab color=\"primary\" aria-label=\"add\" href=\"/addSchema\">\n        <AddIcon />\n      </Fab>\n    </div>\n  );\n};\n\nexport default Schemas;\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n}));\nexport default useStyles;\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  dialogTitle: {\n    marginRight: theme.spacing(30),\n    color: \"#3F51B5\",\n  }, \n  closeButton: {\n    position: \"absolute\",\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n  dialogContent: {\n    padding: theme.spacing(2),\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"stretch\",\n  },\n  dialogActions: {\n    margin: 0,\n    padding: theme.spacing(1),\n    display: \"flex\",\n    justifyContent: \"center\",\n  },\n}));\n\nexport default useStyles;\n","import React from \"react\";\nimport useStyles from \"./dialog-template.styles\";\nimport {\n  Dialog,\n  DialogContent,\n  DialogTitle,\n  DialogActions,\n  IconButton,\n  Typography,\n} from \"@material-ui/core\";\nimport CloseIcon from \"@material-ui/icons/Close\";\n\nconst DialogTemplate = ({ title, content, actions, open, onClose }) => {\n  const classes = useStyles();\n\n  return (\n    <Dialog open={open} onClose={onClose}>\n      <DialogTitle title={title} onClose={onClose} disableTypography>\n        <Typography variant=\"h4\" className={classes.dialogTitle}>\n          {title}\n        </Typography>\n        {onClose ? (\n          <IconButton onClick={onClose} className={classes.closeButton}>\n            <CloseIcon />\n          </IconButton>\n        ) : null}\n      </DialogTitle>\n      <DialogContent className={classes.dialogContent} dividers>\n        {content}\n      </DialogContent>\n      <DialogActions className={classes.dialogActions}>{actions}</DialogActions>\n    </Dialog>\n  );\n};\n\nexport default DialogTemplate;\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    fontFamily:'Consolas,monospace'\n  },\n  date: {\n    fontWeight: \"500\",\n    color: \"blue\",\n    textAlign: \"center\",\n    fontSize:'small'\n  },\n  field: {\n    display: \"flex\",\n    justifyContent: \"space-around\",\n  },\n  fieldTitle: {\n    fontWeight: \"800\",\n    color: \"blue\",\n    fontFamily:'Consolas,monospace',\n    textAlign:'left'\n  },\n  fieldValue: {\n    fontFamily:'Consolas,monospace',\n    textAlign:'left'\n  },\n}));\nexport default useStyles;\n","const propertyConfig = {\n  propertyFields: [\n    {\n      name: \"propertyName\",\n      displayName: \"Name\",\n      type: \"String\",\n      required: true,\n    },\n    {\n      name: \"propertyType\",\n      displayName: \"Type\",\n      type: \"Array\",\n      options: [\"String\", \"Number\", \"Boolean\", \"Date\", \"ObjectId\"],\n      required: true,\n    },\n    {\n      name: \"defaultValue\",\n      displayName: \"Default Value\",\n      type: \"String\",\n      required: false,\n    },\n    { name: \"enum\", displayName: \"Enum\", type: \"Enum\", required: false },\n    {\n      name: \"isUnique\",\n      displayName: \"Unique\",\n      type: \"Boolean\",\n      required: true,\n    },\n    {\n      name: \"index\",\n      displayName: \"Index\",\n      type: \"Boolean\",\n      required: false,\n    },\n    {\n      name: \"required\",\n      displayName: \"Required\",\n      type: \"Boolean\",\n      required: false,\n    },\n  ],\n  validationSchemas: {\n    Number: [\n      {\n        name: \"biggerThan\",\n        displayName: \"Bigger Than\",\n        type: \"Number\",\n      },\n      {\n        name: \"smallerThan\",\n        displayName: \"Smaller Than\",\n        type: \"Number\",\n      },\n      {\n        name: \"equalsTo\",\n        displayName: \"Equals To\",\n        type: \"Number\",\n      },\n      {\n        name: \"minDigitsAmount\",\n        displayName: \"Min Digits Amount\",\n        type: \"Number\",\n      },\n      {\n        name: \"maxDigitsAmount\",\n        displayName: \"Max Digits Amount\",\n        type: \"Number\",\n      },\n      {\n        name: \"digitsAmount\",\n        displayName: \"Digits Amount\",\n        type: \"Number\",\n      },\n      {\n        name: \"differFrom\",\n        displayName: \"Differ From\",\n        type: \"Array\",\n        items: { type: \"Number\" },\n      },\n      {\n        name: \"isEven\",\n        displayName: \"Even\",\n        type: \"Boolean\",\n      },\n      {\n        name: \"isPositive\",\n        displayName: \"Positive\",\n        type: \"Boolean\",\n      },\n      {\n        name: \"isPrime\",\n        displayName: \"Prime\",\n        type: \"Boolean\",\n      },\n      {\n        name: \"isDecimal\",\n        displayName: \"Decimal\",\n        type: \"Boolean\",\n      },\n    ],\n    String: [\n      {\n        name: \"longerThan\",\n        displayName: \"Longer Than\",\n        type: \"Number\",\n      },\n      {\n        name: \"shorterThan\",\n        displayName: \"Shorter Than\",\n        type: \"Number\",\n      },\n      {\n        name: \"length\",\n        displayName: \"Length\",\n        type: \"Number\",\n      },\n      {\n        name: \"equalsTo\",\n        displayName: \"Equals To\",\n        type: \"String\",\n      },\n      {\n        name: \"startsWith\",\n        displayName: \"Starts With\",\n        type: \"String\",\n      },\n      {\n        name: \"endsWith\",\n        displayName: \"Ends With\",\n        type: \"String\",\n      },\n      {\n        name: \"differFrom\",\n        displayName: \"Differ From\",\n        type: \"Array\",\n        items: { type: \"String\" },\n      },\n      {\n        name: \"includes\",\n        displayName: \"Includes\",\n        type: \"Array\",\n        items: { type: \"String\" },\n      },\n      {\n        name: \"mustNotInclude\",\n        displayName: \"Must Not Include\",\n        type: \"Array\",\n        items: { type: \"String\" },\n      },\n      {\n        name: \"isPhoneNumber\",\n        displayName: \"Phone Number\",\n        type: \"Boolean\",\n      },\n      {\n        name: \"isEmail\",\n        displayName: \"Email\",\n        type: \"Boolean\",\n      },\n    ],\n    Date: [\n      {\n        name: \"before\",\n        displayName: \"Before\",\n        type: \"String\",\n        format: \"Date\",\n      },\n      {\n        name: \"after\",\n        displayName: \"After\",\n        type: \"String\",\n        format: \"Date\",\n      },\n      {\n        name: \"equalsTo\",\n        displayName: \"Equals To\",\n        type: \"String\",\n        format: \"Date\",\n      },\n      {\n        name: \"differFrom\",\n        displayName: \"Differ From\",\n        type: \"Array\",\n        items: { type: \"String\", format: \"Date\" },\n      },\n    ],\n  },\n};\n\nexport default propertyConfig;\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n  }\n}));\nexport default useStyles;\n","import React from \"react\";\nimport useStyles from \"./validation-fields.styles\";\nimport propertyConfig from \"../shared/config/property.config\";\n\nconst ValidationFields = ({ property }) => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      {Object.keys(property.validation).length === 0 ? (\n        <pre>none</pre>\n      ) : (\n        propertyConfig.validationSchemas[property.propertyType] &&\n        propertyConfig.validationSchemas[property.propertyType].map(\n          (validationField) =>\n            property.validation[validationField.name] !== undefined && (\n              <div key={validationField.name}>\n                <pre>\n                  {validationField.displayName}-{\" \"}\n                  {validationField.type === \"Array\" ||\n                  validationField.type === \"Boolean\"\n                    ? JSON.stringify(property.validation[validationField.name])\n                    : property.validation[validationField.name]}\n                </pre>\n              </div>\n            )\n        )\n      )}\n    </div>\n  );\n};\n\nexport default ValidationFields;\n","import React from \"react\";\nimport useStyles from \"./property-fields.styles\";\nimport propertyConfig from \"../shared/config/property.config\";\nimport ValidationFields from \"../validation-fields/validation-fields\";\n\nconst PropertyFields = ({ property }) => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.date}>\n        Created At {new Date(property.createdAt).toLocaleString()} | Updated At{\" \"}\n        {new Date(property.updatedAt).toLocaleString()}\n      </div>\n      {propertyConfig.propertyFields.map((field) => {\n        return property[field.name] !== undefined ? (\n          <div key={field.name} className={classes.field}>\n            <h3 className={classes.fieldTitle}>{field.displayName}</h3>\n            <pre className={classes.fieldValue}>\n              {field.type === \"Enum\" || field.type === \"Boolean\"\n                ? JSON.stringify(property[field.name])\n                : property[field.name]}\n            </pre>\n          </div>\n        ) : null;\n      })}\n      {property.validation !== undefined && (\n        <div key=\"validation\" className={classes.field}>\n          <h3 className={classes.fieldTitle}>Validation</h3>\n          <ValidationFields property={property} />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default PropertyFields;\n","import React from \"react\";\nimport useStyles from \"./property-view.styles\";\nimport DialogTemplate from \"../dialog-template/dialog-template\";\nimport PropertyFields from \"../property-fields/property-fields\";\n\nconst PropertyView = ({ open, onClose, property, schema }) => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      {property && (\n        <DialogTemplate\n          title={property.propertyName}\n          content={<PropertyFields property={property} />}\n          open={open}\n          onClose={onClose}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default PropertyView;\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: \"50vh\",\n  },\n  title: {\n    color: \"#3F51B5\",\n    fontWeight: \"700\",\n    textAlign: \"center\",\n  },\n  date: {\n    fontWeight: \"500\",\n    color: \"#3F51B5\",\n    textAlign: \"center\",\n    fontSize: \"medium\",\n  },\n  buttons: {\n    display: \"flex\",\n    justifyContent: \"center\",\n  },\n  button: {\n    margin: \"3px\",\n  },\n}));\n\nexport default useStyles;\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"70%\",\n    background: \"white\",\n    border: \"1px solid #3F51B5\"\n  },\n  listItem: {\n    color: \"#3F51B5\",\n    fontWeight: \"500\",\n    background: \"#a8b3f5\",\n    marginBottom: '5px'\n  },\n}));\n\nexport default useStyles;","import React from \"react\";\nimport { ListItem, List } from \"@material-ui/core\";\nimport useStyles from \"./clickable-properties-list.styles\";\nimport Scrollbar from \"react-scrollbars-custom\";\n\nconst ClickablePropertiesList = ({ propertiesList, onClick }) => {\n  const classes = useStyles();\n\n  return (\n    <>\n      <Scrollbar className={classes.root}>\n        <List>\n          {propertiesList.length > 0 ? (\n            propertiesList.map((property) => (\n              <ListItem\n                button\n                key={property.propertyName}\n                onClick={() => onClick(property)}\n                className={classes.listItem}\n              >\n                {property.propertyName}\n              </ListItem>\n            ))\n          ) : (\n            <ListItem className={classes.listItem}>\n              There are no properties\n            </ListItem>\n          )}\n        </List>\n      </Scrollbar>\n    </>\n  );\n};\n\nexport default ClickablePropertiesList;\n","import axios from \"axios\";\nimport conf from \"./appConf\";\n\nconst { server } = conf;\n\nconst instance = axios.create({\n  baseURL: `http://${server.host}:${server.port}/api/schema`,\n  headers: {\n    \"Content-Type\": \"application/json\",\n  },\n});\n\nexport default instance;\n","let conf = {\n  // TODO: update config\n  server: {\n    host: \"localhost\",\n    port: 3000,\n    // port: 4000,\n  },\n};\n\nexport default conf;\n","import axiosInstance from \"../axiosConf\";\n\nclass SchemaService {\n  static async getSchemasList() {\n    const { data } = await axiosInstance.get(\"/\");\n    return data;\n  }\n\n  // TODO: maybe delete\n  static async getSchemaById(schemaId) {\n    const { data } = await axiosInstance.get(`/${schemaId}`);\n    return data;\n  }\n\n  static async createSchema(schema) {\n    return await axiosInstance.post(\"/\", {\n      ...schema\n    });\n  }\n\n  static async updateSchema(schemaId, updatedSchema) {\n    return await axiosInstance.put(`/${schemaId}`, {\n      ...updatedSchema\n    });\n  }\n\n  static async deleteSchemaById(schemaId) {\n    await axiosInstance.delete(`/${schemaId}`);\n  }\n\n  // TODO: maybe delete\n  static async deletePropertyFromSchemaById(schemaId, propertyId) {\n    await axiosInstance.delete(`/${schemaId}/${propertyId}`);\n  }\n}\n\nexport default SchemaService;\n","import React, { useContext, useState, useEffect } from \"react\";\nimport { schemasListContext } from \"../shared/contexts\";\nimport PropertyView from \"../property-view/property-view\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport Fab from \"@material-ui/core/Fab\";\nimport { useHistory } from \"react-router\";\nimport { useParams } from \"react-router-dom\";\nimport useStyles from \"./schema.styles\";\nimport ClickablePropertiesList from \"../clickable-properties-list/clickable-properties-list\";\nimport SchemaService from \"../../services/SchemaService\";\n\nconst Schema = () => {\n  const classes = useStyles();\n  let history = useHistory();\n  const { schemaName } = useParams();\n  const { schemasList, setSchemasList } = useContext(schemasListContext);\n  const schema = schemasList.find(\n    (schema) => schema.schemaName === `${schemaName}`\n  );\n  const [selectedProperty, setSelectedProperty] = useState(undefined);\n\n  const handleOpenViewPropertyDialog = (property) => {\n    setSelectedProperty(property);\n  };\n\n  const handleCloseViewPropertyDialog = () => {\n    setSelectedProperty(undefined);\n  };\n\n  const handleDeleteSchema = async () => {\n    await SchemaService.deleteSchemaById(schema._id);\n    await setSchemasList(await SchemaService.getSchemasList());\n    history.push(\"/\");\n  };\n\n  return (\n    <div className={classes.root}>\n      {schema && (\n        <>\n          <h1 className={classes.title}>\n            {schema ? schema.schemaName : \"Schema not found\"}\n          </h1>\n          <div className={classes.date}>\n            Created At {new Date(schema.createdAt).toLocaleString()} | Updated\n            At {new Date(schema.updatedAt).toLocaleString()}\n          </div>\n          <hr></hr>\n          {schema.schemaProperties && (\n            <>\n              <ClickablePropertiesList\n                propertiesList={schema.schemaProperties}\n                onClick={(property) => handleOpenViewPropertyDialog(property)}\n              />\n              <PropertyView\n                open={selectedProperty !== undefined}\n                onClose={handleCloseViewPropertyDialog}\n                schema={schema}\n                property={selectedProperty}\n              />\n            </>\n          )}\n          <br />\n          <div className={classes.buttons}>\n            <Fab\n              color=\"primary\"\n              href={`/edit/${schema.schemaName}`}\n              className={classes.button}\n            >\n              <EditIcon />\n            </Fab>\n            <Fab\n              color=\"primary\"\n              onClick={() => handleDeleteSchema()}\n              className={classes.button}\n            >\n              <DeleteIcon />\n            </Fab>\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Schema;\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  title:{\n    color: \"#3F51B5\",\n    fontWeight: \"700\",\n    textAlign: \"center\",\n  },\n}));\n\nexport default useStyles;","import React from \"react\";\nimport useStyles from \"./migrations.styles\";\n\nconst Migrations = () => {\n  const classes = useStyles();\n\n  return <h1 className={classes.title}>MIGRATIONS</h1>;\n};\n\nexport default Migrations;\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  title:{\n    color: \"#3F51B5\",\n    fontWeight: \"700\",\n    textAlign: \"center\",\n  },\n}));\n\nexport default useStyles;\n","import React from \"react\";\nimport useStyles from \"./settings.styles\";\n\nconst Settings = () => {\n  const classes = useStyles();\n\n  return <h1 className={classes.title}>SETTINGS</h1>;\n};\n\nexport default Settings;\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  drawer: {\n    width: \"145px\",\n  },\n  link: {\n    padding: \"15px\",\n    color: \"#3F51B5\",\n    fontWeight: \"500\",\n    fontSize: \"large\",\n    textDecoration: \"none\",\n  },\n}));\n\nexport default useStyles;\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { Drawer, List, ListItem } from \"@material-ui/core\";\nimport useStyles from \"./side-bar.styles\";\n\nconst AppBar = () => {\n  const classes = useStyles();\n  const listItems = [\"Settings\", \"Schemas\", \"Migrations\"];\n\n  return (\n    <Drawer variant=\"permanent\" className={classes.drawer}>\n      <List>\n        {listItems.map((text) => (\n          <ListItem button key={text}>\n            <NavLink\n              to={text === \"Schemas\" ? \"/\" : `/${text.toLowerCase()}`}\n              className={classes.link}\n            >\n              {text}\n            </NavLink>\n          </ListItem>\n        ))}\n      </List>\n    </Drawer>\n  );\n};\n\nexport default AppBar;\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    justifyContent: \"center\",\n  },\n  page: {\n    minWidth: \"45%\",\n    textAlign: \"center\",\n  },\n}));\n\nexport default useStyles;\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  content: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"stretch\",\n    justifyContent: \"center\",\n    width: 300,\n  },\n}));\nexport default useStyles;\n","import { makeStyles, rgbToHex } from \"@material-ui/core/styles\";\nimport { FaRegIdBadge } from \"react-icons/fa\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  tabs: {\n    boxShadow: \"blue\"\n  },\n  tab: {\n    fontWeight: \"700\",\n    background: \"primary\",\n  },\n  selectedTab: {\n    backgroundColor: \"#7083f0\",\n    color: \"darkBlue\"\n  },\n  page: {\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n}));\n\nexport default useStyles;\n","import { makeStyles } from '@material-ui/core/styles';\n\n const useStyles = makeStyles(() => ({\n    root: {}\n  }))\n  \n  export default useStyles;","import React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport PropTypes from \"prop-types\";\nimport useStyles from \"./tab-panel.styles\";\n\nconst TabPanel = ({ children, value, index }) => {\n  const classes = useStyles();\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n    >\n      {value === index && (\n        <Box>\n          <Typography component={\"span\"}>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n};\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nexport default TabPanel;\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  label: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    fontWeight:'500'\n  },\n  field: {\n    display: \"flex\",\n  },\n  button: {\n    color: \"blue\",\n    fontWeight: \"800\",\n  },\n}));\n\nexport default useStyles;\n","import React from \"react\";\nimport useStyles from \"./dynamic-input-fields.styles\";\nimport { FormLabel, Button, TextField, FormControl } from \"@material-ui/core\";\nimport { FaTrash, FaPlusSquare } from \"react-icons/fa\";\n\n// TODO: fix the fact that we can insert only one char at a time to the inputs\nconst DynamicInputFields = ({ fieldName, displayName, object, setObject }) => {\n  const classes = useStyles();\n\n  const handleFieldChange = (event, index) => {\n    const target = event.target;\n    const name = target.name;\n    const value = target.value === \"\" ? undefined : target.value;\n    const values = [...object[name]];\n    values[index] = value;\n    setObject({ ...object, [name]: values });\n  };\n\n  const handleAddFields = () => {\n    const values = object[fieldName] ? [...object[fieldName]] : [];\n    values.push(undefined);\n    setObject({ ...object, [fieldName]: values });\n  };\n\n  const handleRemoveFields = (index) => {\n    const values = [...object[fieldName]];\n    values.splice(index, 1);\n    setObject({ ...object, [fieldName]: values });\n  };\n\n  return (\n    <FormControl>\n      <FormLabel className={classes.label}>\n        {displayName}\n        <Button className={classes.button} onClick={() => handleAddFields()}>\n          <FaPlusSquare />\n        </Button>\n      </FormLabel>\n      {object[fieldName] &&\n        object[fieldName].map((value, index) => (\n          <div key={`${value}~${index}`} className={classes.field}>\n            <TextField\n              onChange={(event) => handleFieldChange(event, index)}\n              value={value}\n              name={fieldName}\n            />\n            <Button\n              className={classes.button}\n              onClick={(event) => handleRemoveFields(index)}\n            >\n              <FaTrash />\n            </Button>\n          </div>\n        ))}\n    </FormControl>\n  );\n};\n\nexport default DynamicInputFields;\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n}));\n\nexport default useStyles;\n","import React, { useEffect } from \"react\";\nimport { TextField, FormControlLabel, Checkbox } from \"@material-ui/core\";\nimport useStyles from \"./validation-input-fields.styles\";\nimport propertyConfig from \"../shared/config/property.config\";\nimport DynamicInputFields from \"../dynamic-input-fields/dynamic-input-fields\";\n\nconst ValidationInputFields = ({ property, setProperty }) => {\n  const classes = useStyles();\n\n  const setPropertyValidation = (newPropertyValidation) => {\n    setProperty((prevValue) => {\n      return {\n        ...prevValue,\n        validation: newPropertyValidation,\n      };\n    });\n  };\n\n  const handleChange = (event) => {\n    const target = event.target;\n    const name = target.name;\n    let value;\n    if (target.type === \"checkbox\") {\n      value = target.checked;\n    } else if (target.value === \"\") {\n      value = undefined;\n    } else {\n      value = target.value;\n    }\n    setProperty((prevValue) => {\n      return {\n        ...prevValue,\n        validation: { ...property.validation, [name]: value },\n      };\n    });\n  };\n\n  useEffect(() => {\n    if (propertyConfig.validationSchemas[property.propertyType]) {\n      propertyConfig.validationSchemas[property.propertyType].forEach(\n        (field) => {\n          if (field.type === \"Boolean\")\n            setProperty((prevValue) => {\n              return {\n                ...prevValue,\n                validation: {\n                  ...prevValue.validation,\n                  [field.name]: false,\n                },\n              };\n            });\n        }\n      );\n    }\n  }, [setProperty, property.propertyType]);\n\n  return (\n    <div className={classes.root}>\n      {propertyConfig.validationSchemas[property.propertyType] &&\n        propertyConfig.validationSchemas[property.propertyType].map(\n          (validationField) => {\n            switch (validationField.type) {\n              case \"String\":\n              case \"Number\":\n              case \"Date\":\n                return (\n                  <TextField\n                    key={validationField.name}\n                    name={validationField.name}\n                    label={validationField.displayName}\n                    value={\n                      property.validation &&\n                      property.validation[validationField.name] !== undefined\n                        ? property.validation[validationField.name]\n                        : \"\"\n                    }\n                    onChange={handleChange}\n                  />\n                );\n              case \"Boolean\":\n                return (\n                  <FormControlLabel\n                    key={validationField.name}\n                    control={\n                      <Checkbox\n                        checked={\n                          property.validation &&\n                          property.validation[validationField.name]\n                            ? true\n                            : false\n                        }\n                        onChange={handleChange}\n                        name={validationField.name}\n                        color=\"primary\"\n                      />\n                    }\n                    label={validationField.displayName}\n                  />\n                );\n              case \"Array\":\n                return (\n                  <DynamicInputFields\n                    key={validationField.name}\n                    fieldName={validationField.name}\n                    displayName={validationField.displayName}\n                    object={property.validation}\n                    setObject={setPropertyValidation}\n                  />\n                );\n              default:\n                return null;\n            }\n          }\n        )}\n    </div>\n  );\n};\n\nexport default ValidationInputFields;\n","import React, { useEffect, useContext, useState } from \"react\";\nimport useStyles from \"./property-input-fields.styles\";\nimport {\n  TextField,\n  Select,\n  MenuItem,\n  FormControl,\n  FormControlLabel,\n  InputLabel,\n  Checkbox,\n  AppBar,\n  Tab,\n  Tabs,\n} from \"@material-ui/core\";\nimport TabPanel from \"../tab-panel/tab-panel\";\nimport propertyConfig from \"../shared/config/property.config\";\nimport DynamicInputFields from \"../dynamic-input-fields/dynamic-input-fields\";\nimport ValidationInputFields from \"../validation-input-fields/validation-input-fields\";\nimport { schemasListContext } from \"../shared/contexts\";\n\nconst PropertyInputFields = ({ newProperty, setNewProperty }) => {\n  const classes = useStyles();\n  const { schemasList } = useContext(schemasListContext);\n  const [pageValue, setPageValue] = useState(0);\n\n  const handlePageChange = (event, newValue) => {\n    setPageValue(newValue);\n  };\n\n  const handleChange = (event) => {\n    const target = event.target;\n    const name = target.name;\n    let value;\n    if (target.type === \"checkbox\") {\n      value = target.checked;\n    } else if (target.value === \"\") {\n      value = undefined;\n    } else {\n      value = target.value;\n    }\n    setNewProperty((prevValue) =>\n      name === \"propertyType\"\n        ? { ...prevValue, [name]: value, validation: {} }\n        : { ...prevValue, [name]: value }\n    );\n  };\n\n  const getPropertyInputFields = () => {\n    return (\n      <>\n        {propertyConfig.propertyFields.map((field) => {\n          switch (field.type) {\n            case \"String\":\n              return (\n                <TextField\n                  key={field.name}\n                  name={field.name}\n                  label={field.displayName}\n                  value={\n                    newProperty[field.name] !== undefined\n                      ? newProperty[field.name]\n                      : \"\"\n                  }\n                  onChange={handleChange}\n                  required={field.required}\n                />\n              );\n            case \"Array\":\n              return (\n                <FormControl required={field.required} key={field.name}>\n                  <InputLabel>{field.displayName}</InputLabel>\n                  <Select\n                    name={field.name}\n                    value={\n                      newProperty[field.name] ? newProperty[field.name] : \"\"\n                    }\n                    onChange={handleChange}\n                  >\n                    {field.options.map((option) => {\n                      return (\n                        <MenuItem key={option} value={option}>\n                          {option}\n                        </MenuItem>\n                      );\n                    })}\n                  </Select>\n                </FormControl>\n              );\n            case \"Boolean\":\n              return (\n                <FormControlLabel\n                  key={field.name}\n                  control={\n                    <Checkbox\n                      checked={newProperty[field.name] ? true : false}\n                      onChange={handleChange}\n                      name={field.name}\n                      color=\"primary\"\n                    />\n                  }\n                  label={field.displayName}\n                />\n              );\n            case \"Enum\":\n              return (\n                <DynamicInputFields\n                  key={field.name}\n                  fieldName={field.name}\n                  displayName={field.displayName}\n                  object={newProperty}\n                  setObject={setNewProperty}\n                />\n              );\n            default:\n              return null;\n          }\n        })}\n        {newProperty.propertyType === \"ObjectId\" && (\n          <FormControl required>\n            <InputLabel>Property Ref</InputLabel>\n            <Select\n              name=\"propertyRef\"\n              value={newProperty.propertyRef ? newProperty.propertyRef : \"\"}\n              onChange={handleChange}\n            >\n              {schemasList.map((schema) => {\n                return (\n                  <MenuItem key={schema.schemaName} value={schema.schemaName}>\n                    {schema.schemaName}\n                  </MenuItem>\n                );\n              })}\n            </Select>\n          </FormControl>\n        )}\n      </>\n    );\n  };\n\n  const resetBooleanValues = () => {\n    propertyConfig.propertyFields.forEach((field) => {\n      if (field.type === \"Boolean\" && !newProperty[field.name])\n        setNewProperty((prevValue) => {\n          return { ...prevValue, [field.name]: false };\n        });\n    });\n  };\n\n  const getTabProps = (index) => {\n    return {\n      id: `simple-tab-${index}`,\n      \"aria-controls\": `simple-tabpanel-${index}`,\n    };\n  };\n\n  useEffect(() => {\n    resetBooleanValues();\n  }, []);\n\n  useEffect(() => {\n    if (newProperty.propertyType !== \"ObjectId\") {\n      setNewProperty((prevValue) => {\n        return { ...prevValue, propertyRef: undefined };\n      });\n    }\n  }, [setNewProperty, newProperty.propertyType]);\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Tabs variant='fullWidth' value={pageValue} onChange={handlePageChange} className={classes.tabs}>\n          <Tab\n            className={`${pageValue === 0 ? classes.selectedTab : \"\"} ${\n              classes.tab\n            }`}\n            label=\"Basic Info\"\n            {...getTabProps(0)}\n          />\n          {propertyConfig.validationSchemas[newProperty.propertyType] ? (\n            <Tab\n              className={`${pageValue === 1 ? classes.selectedTab : \"\"} ${\n                classes.tab\n              }`}\n              label=\"Validation\"\n              {...getTabProps(1)}\n            />\n          ) : (\n            <Tab label=\"\" {...getTabProps(1)} disabled />\n          )}\n        </Tabs>\n      </AppBar>\n      <TabPanel value={pageValue} index={0}>\n        <div className={classes.page}>{getPropertyInputFields()}</div>\n      </TabPanel>\n      <TabPanel value={pageValue} index={1}>\n        <ValidationInputFields\n          property={newProperty}\n          setProperty={setNewProperty}\n        />\n      </TabPanel>\n    </div>\n  );\n};\n\nexport default PropertyInputFields;\n","import React, { useState, useEffect } from \"react\";\nimport useStyles from \"./property-actions.styles\";\nimport DialogTemplate from \"../dialog-template/dialog-template\";\nimport { Button } from \"@material-ui/core\";\nimport PropertyInputFields from \"../property-input-fields/property-input-fields\";\nimport propertyConfig from \"../shared/config/property.config\";\n\nconst PropertyActions = ({ open, onClose, actions, initialValue }) => {\n  const classes = useStyles();\n  const [newProperty, setNewProperty] = useState({});\n\n  const isAllRequiredFieldsFilled = () => {\n    let isValid = true;\n    propertyConfig.propertyFields.forEach((propertyField) => {\n      if (\n        propertyField.required &&\n        (newProperty[propertyField.name] === undefined ||\n          newProperty[propertyField.name] === \"\")\n      ) {\n        isValid = false;\n      }\n    });\n    if (\n      newProperty.propertyType === \"ObjectId\" &&\n      newProperty.propertyRef === undefined\n    ) {\n      isValid = false;\n    }\n    return isValid;\n  };\n\n  const isPropertyValidated = () => {\n    // TODO: Add validation\n    let isValid = true;\n    if (!isAllRequiredFieldsFilled()) {\n      isValid = false;\n      alert(\"Please fill all required fields\");\n    }\n    return isValid;\n  };\n\n  useEffect(() => {\n    if (initialValue) {\n      setNewProperty(initialValue);\n    }\n  }, [initialValue]);\n\n  return (\n    <DialogTemplate\n      title={`${actions[0].actionName.toUpperCase()} PROPERTY`}\n      content={\n        <div className={classes.content}>\n          {\n            <PropertyInputFields\n              newProperty={newProperty}\n              setNewProperty={setNewProperty}\n            />\n          }\n        </div>\n      }\n      actions={\n        actions &&\n        actions.map((action) => (\n          <Button\n            key={action.actionName}\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => {\n              if (isPropertyValidated()) {\n                action.actionFunction(newProperty);\n                setNewProperty({});\n              }\n            }}\n          >\n            {action.actionName.toUpperCase()}\n          </Button>\n        ))\n      }\n      open={open}\n      onClose={onClose}\n    />\n  );\n};\n\nexport default PropertyActions;\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n}));\n\nexport default useStyles;","import React from \"react\";\nimport PropertyActions from \"../property-actions/property-actions\";\nimport useStyles from \"./add-property.styles\";\n\nconst AddProperty = ({\n  open,\n  onClose,\n  schemaProperties,\n  setSchemaProperties,\n}) => {\n  const classes = useStyles();\n\n  const handlePropertyCreation = (newProperty) => {\n    // TODO: Check if property name already exist\n    const save = [...schemaProperties];\n    save.push(newProperty);\n    setSchemaProperties(save);\n  };\n\n  return (\n    <PropertyActions\n      actions={[\n        {\n          actionName: \"create\",\n          actionFunction: (newProperty) => {\n            handlePropertyCreation(newProperty);\n            onClose();\n          },\n        },\n      ]}\n      open={open}\n      onClose={onClose}\n    />\n  );\n};\n\nexport default AddProperty;\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: \"50vh\",\n  },\n  title: {\n    color: \"#3F51B5\",\n    fontWeight: \"700\",\n    textAlign: \"center\",\n  },\n}));\n\nexport default useStyles;\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"70%\",\n    background: \"white\",\n    border: \"1px solid #3F51B5\",\n  },\n  listItem: {\n    color: \"#3F51B5\",\n    fontWeight: \"500\",\n    background: \"#a8b3f5\",\n    marginBottom: '5px'\n  },\n}));\n\nexport default useStyles;","import { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n}));\n\nexport default useStyles;","import React, { useState } from \"react\";\nimport { ListItem } from \"@material-ui/core\";\nimport PropertyActions from \"../property-actions/property-actions\";\nimport useStyles from \"./editable-property.styles\";\n\nconst EditableProperty = ({\n  property,\n  schemaProperties,\n  setSchemaProperties,\n}) => {\n  const classes = useStyles();\n  const [openUpdatePropertyDialog, setOpenUpdatePropertyDialog] = useState(\n    false\n  );\n\n  const handleOpenUpdatePropertyDialog = () => {\n    setOpenUpdatePropertyDialog(true);\n  };\n\n  const handleCloseUpdatePropertyDialog = () => {\n    setOpenUpdatePropertyDialog(false);\n  };\n\n  const handlePropertyUpdate = (newProperty) => {\n    const save = [...schemaProperties];\n    const propertyIndex = save\n      .map((newProperty) => newProperty._id)\n      .indexOf(newProperty._id);\n    save[propertyIndex] = newProperty;\n    setSchemaProperties(save);\n  };\n\n  const handleDeleteProperty = (propertyToDelete) => {\n    const save = [...schemaProperties];\n    const propertyIndex = save\n      .map((property) => property._id)\n      .indexOf(propertyToDelete._id);\n    save.splice(propertyIndex, 1);\n    setSchemaProperties(save);\n  };\n\n  return (\n    <>\n      <ListItem\n        button\n        onClick={handleOpenUpdatePropertyDialog}\n        key={property.propertyName}\n      >\n        {property.propertyName}\n      </ListItem>\n      <PropertyActions\n        actions={[\n          {\n            actionName: \"edit\",\n            actionFunction: (newProperty) => {\n              handlePropertyUpdate(newProperty);\n              handleCloseUpdatePropertyDialog();\n            },\n          },\n          {\n            actionName: \"delete\",\n            actionFunction: (property) => {\n              handleDeleteProperty(property);\n              handleCloseUpdatePropertyDialog();\n            },\n          },\n        ]}\n        open={openUpdatePropertyDialog}\n        onClose={handleCloseUpdatePropertyDialog}\n        initialValue={property}\n      />\n    </>\n  );\n};\n\nexport default EditableProperty;\n","import React from \"react\";\nimport { ListItem, List } from \"@material-ui/core\";\nimport useStyles from \"./editable-properties-list.styles\";\nimport Scrollbar from \"react-scrollbars-custom\";\nimport EditableProperty from \"../editable-property/editable-property\";\n\nconst EditablePropertiesList = ({ propertiesList, setPropertiesList }) => {\n  const classes = useStyles();\n\n  return (\n    <>\n      <Scrollbar className={classes.root}>\n        <List>\n          {propertiesList.length > 0 ? (\n            propertiesList.map((property) => (\n              <div key={property.propertyName} className={classes.listItem}>\n                <EditableProperty\n                  property={property}\n                  schemaProperties={propertiesList}\n                  setSchemaProperties={setPropertiesList}\n                />\n              </div>\n            ))\n          ) : (\n            <ListItem className={classes.listItem}>\n              There are no properties\n            </ListItem>\n          )}\n        </List>\n      </Scrollbar>\n    </>\n  );\n};\n\nexport default EditablePropertiesList;\n","import React, { useState, useContext } from \"react\";\nimport { TextField, Button } from \"@material-ui/core\";\nimport AddProperty from \"../add-property/add-property\";\nimport { schemasListContext } from \"../shared/contexts\";\nimport { useHistory } from \"react-router\";\nimport useStyles from \"./add-schema.styles\";\nimport EditablePropertiesList from \"../editable-properties-list/editable-properties-list\";\nimport SchemaService from \"../../services/SchemaService\";\n\nconst AddSchema = () => {\n  const classes = useStyles();\n  let history = useHistory();\n  const { setSchemasList } = useContext(schemasListContext);\n  const [schemaName, setSchemaName] = useState(\"\");\n  const [schemaProperties, setSchemaProperties] = useState([]);\n  const [openCreatePropertyDialog, setOpenCreatePropertyDialog] = useState(\n    false\n  );\n\n  const handleSchemaCreation = async () => {\n    await SchemaService.createSchema({\n      schemaName: schemaName,\n      schemaProperties: schemaProperties,\n    });\n    await setSchemasList(await SchemaService.getSchemasList());\n    history.push(\"/\");\n  };\n\n  const handleOpenCreatePropertyDialog = () => {\n    setOpenCreatePropertyDialog(true);\n  };\n\n  const handleCloseCreatePropertyDialog = () => {\n    setOpenCreatePropertyDialog(false);\n  };\n  return (\n    <div className={classes.root}>\n      <h1 className={classes.title}>ADD SCHEMA</h1>\n      <TextField\n        id=\"standard-basic\"\n        label=\"Schema Name\"\n        value={schemaName}\n        onChange={(event) => {\n          setSchemaName(event.target.value);\n        }}\n      />\n      <br />\n      <br />\n      <EditablePropertiesList\n        propertiesList={schemaProperties}\n        setPropertiesList={setSchemaProperties}\n      />\n      <br />\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        onClick={handleOpenCreatePropertyDialog}\n      >\n        ADD PROPERTY\n      </Button>\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        onClick={handleSchemaCreation}\n      >\n        CREATE\n      </Button>\n      <Button variant=\"contained\" color=\"primary\" href=\"/\">\n        CANCEL\n      </Button>\n      <AddProperty\n        open={openCreatePropertyDialog}\n        onClose={handleCloseCreatePropertyDialog}\n        schemaProperties={schemaProperties}\n        setSchemaProperties={setSchemaProperties}\n      />\n    </div>\n  );\n};\n\nexport default AddSchema;\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: \"50vh\",\n  },\n  title: {\n    color: \"#3F51B5\",\n    fontWeight: \"700\",\n    textAlign: \"center\",\n  },\n}));\n\nexport default useStyles;\n","import React, { useContext, useState, useEffect } from \"react\";\nimport { schemasListContext } from \"../shared/contexts\";\nimport { useParams } from \"react-router-dom\";\nimport { useHistory } from \"react-router\";\nimport { TextField, Button } from \"@material-ui/core\";\nimport EditablePropertiesList from \"../editable-properties-list/editable-properties-list\";\nimport AddProperty from \"../add-property/add-property\";\nimport useStyles from \"./edit-schema.styles\";\nimport SchemaService from \"../../services/SchemaService\";\n\nconst EditSchema = () => {\n  const classes = useStyles();\n  let history = useHistory();\n  const { schemaName } = useParams();\n  const { schemasList, setSchemasList } = useContext(schemasListContext);\n  const prevSchema = schemasList.find(\n    (schema) => schema.schemaName === `${schemaName}`\n  );\n  const [newSchema, setNewSchema] = useState({});\n  const [openCreatePropertyDialog, setOpenCreatePropertyDialog] = useState(\n    false\n  );\n\n  const handleChangeName = (event) => {\n    setNewSchema({ ...newSchema, schemaName: event.target.value });\n  };\n\n  const handleOpenCreatePropertyDialog = () => {\n    setOpenCreatePropertyDialog(true);\n  };\n\n  const handleCloseCreatePropertyDialog = () => {\n    setOpenCreatePropertyDialog(false);\n  };\n  const handleSchemaUpdate = async () => {\n    await SchemaService.updateSchema(prevSchema._id, newSchema);\n    await setSchemasList(await SchemaService.getSchemasList());\n    history.push(\"/\");\n  };\n\n  const setSchemaProperties = (schemaProperties) => {\n    setNewSchema((prevNewSchema) => {\n      return { ...prevNewSchema, schemaProperties: schemaProperties };\n    });\n  };\n\n  useEffect(() => {\n    setNewSchema(prevSchema);\n  }, [prevSchema]);\n\n  return (\n    <div className={classes.root}>\n      {newSchema && (\n        <>\n          <h1 className={classes.title}>EDIT SCHEMA</h1>\n          <TextField\n            id=\"standard-basic\"\n            label=\"Schema Name\"\n            defaultValue={newSchema.schemaName}\n            onChange={(event) => handleChangeName(event)}\n          />\n          <br />\n          <br />\n          {newSchema.schemaProperties && (\n            <EditablePropertiesList\n              propertiesList={newSchema.schemaProperties}\n              setPropertiesList={(newSchemaProperties) =>\n                setSchemaProperties(newSchemaProperties)\n              }\n            />\n          )}\n          <br />\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={handleOpenCreatePropertyDialog}\n          >\n            ADD PROPERTY\n          </Button>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => handleSchemaUpdate()}\n          >\n            EDIT\n          </Button>\n          <Button variant=\"contained\" color=\"primary\" href=\"/\">\n            CANCEL\n          </Button>\n          <AddProperty\n            open={openCreatePropertyDialog}\n            onClose={handleCloseCreatePropertyDialog}\n            schemaProperties={newSchema.schemaProperties}\n            setSchemaProperties={setSchemaProperties}\n          />\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default EditSchema;\n","import React, { useEffect, useState } from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Schemas from \"./components/schemas/schemas\";\nimport Schema from \"./components/schema/schema\";\nimport Migrations from \"./components/migrations/migrations\";\nimport Settings from \"./components/settings/settings\";\nimport AppBar from \"./components/side-bar/side-bar\";\nimport useStyles from \"./App.styles\";\nimport AddSchema from \"./components/add-schema/add-schema\";\nimport EditSchema from \"./components/edit-schema/edit-schema\";\nimport { schemasListContext } from \"./components/shared/contexts\";\nimport SchemaService from \"./services/SchemaService\";\n\nconst App = () => {\n  const classes = useStyles();\n  const [schemasList, setSchemasList] = useState([]);\n\n  const getSchemaList = async () => {\n    setSchemasList(await SchemaService.getSchemasList());\n  };\n\n  useEffect(() => {\n    getSchemaList();\n  }, []);\n\n  return (\n    <Router>\n      <div className={classes.root}>\n        <AppBar />\n        <div className={classes.page}>\n          <Switch>\n            <Route path=\"/migrations\">\n              <Migrations />\n            </Route>\n            <Route path=\"/settings\">\n              <Settings />\n            </Route>\n            <Route path=\"/addSchema\">\n              <schemasListContext.Provider\n                value={{ schemasList, setSchemasList }}\n              >\n                <AddSchema />\n              </schemasListContext.Provider>\n            </Route>\n            <Route path=\"/edit/:schemaName\">\n              <schemasListContext.Provider\n                value={{ schemasList, setSchemasList }}\n              >\n                <EditSchema />\n              </schemasListContext.Provider>\n            </Route>\n            <Route path=\"/:schemaName\">\n              <schemasListContext.Provider\n                value={{ schemasList, setSchemasList }}\n              >\n                <Schema />\n              </schemasListContext.Provider>\n            </Route>\n            <Route path=\"/\">\n              <schemasListContext.Provider\n                value={{ schemasList, setSchemasList }}\n              >\n                <Schemas />\n              </schemasListContext.Provider>\n            </Route>\n          </Switch>\n        </div>\n      </div>\n    </Router>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App.jsx\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}